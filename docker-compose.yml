version: '3'
services:
    auth-service:
        build:
            context: ./auth/docker/8.1
            dockerfile: Dockerfile
            args:
                WWWGROUP: '1000'
        image: sail-8.1/app
        ports:
            - '${APP_PORT:-81}:80'
        environment:
            WWWUSER: '1000'
        volumes:
            - './auth:/var/www/html'
        networks:
            - ticket-network
        depends_on:
            - kafka
            - auth-mysql
    expiration-service:
        build:
            context: ./expiration/docker/8.1
            dockerfile: Dockerfile
            args:
                WWWGROUP: '1000'
        image: sail-8.1/app
        ports:
            - '${APP_PORT:-83}:80'
        environment:
            WWWUSER: '1000'
        volumes:
            - './expiration:/var/www/html'
        networks:
            - ticket-network
        depends_on:
            - kafka
            - expiration-mysql
    order-service:
        build:
            context: ./order/docker/8.1
            dockerfile: Dockerfile
            args:
                WWWGROUP: '1000'
        image: sail-8.1/app
        ports:
            - '${APP_PORT:-84}:80'
        environment:
            WWWUSER: '1000'
        volumes:
            - './order:/var/www/html'
        networks:
            - ticket-network
        depends_on:
            - kafka
            - order-mysql
    payment-service:
        build:
            context: ./payment/docker/8.1
            dockerfile: Dockerfile
            args:
                WWWGROUP: '1000'
        image: sail-8.1/app
        ports:
            - '${APP_PORT:-85}:80'
        environment:
            WWWUSER: '1000'
        volumes:
            - './payment:/var/www/html'
        networks:
            - ticket-network
        depends_on:
            - kafka
            - payment-mysql
    ticket-service:
        build:
            context: ./ticket/docker/8.1
            dockerfile: Dockerfile
            args:
                WWWGROUP: '1000'
        image: sail-8.1/app
        ports:
            - '${APP_PORT:-86}:80'
        environment:
            WWWUSER: '1000'
        volumes:
            - './ticket:/var/www/html'
        networks:
            - ticket-network
        depends_on:
            - kafka
            - ticket-mysql
    auth-mysql:
        build:
            context: ./auth/docker/8.1/mysql
            dockerfile: Dockerfile
        ports:
            - '${FORWARD_DB_PORT:-3307}:3306'
        environment:
            MYSQL_ROOT_PASSWORD: '12345678'
            MYSQL_ROOT_HOST: '%'
            MYSQL_DATABASE: 'robert'
            MYSQL_USER: 'robert'
            MYSQL_PASSWORD: '12345678'
            MYSQL_ALLOW_EMPTY_PASSWORD: 1
        networks:
            - ticket-network
        volumes:
            - auth-mysql-volume:/var/lib/mysql
    expiration-mysql:
        build:
            context: ./expiration/docker/8.1/mysql
            dockerfile: Dockerfile
        ports:
            - '${FORWARD_DB_PORT:-3309}:3306'
        environment:
            MYSQL_ROOT_PASSWORD: '12345678'
            MYSQL_ROOT_HOST: '%'
            MYSQL_DATABASE: 'robert'
            MYSQL_USER: 'robert'
            MYSQL_PASSWORD: '12345678'
            MYSQL_ALLOW_EMPTY_PASSWORD: 1
        networks:
            - ticket-network
        volumes:
            - expiration-mysql-volume:/var/lib/mysql
    order-mysql:
        build:
            context: ./order/docker/8.1/mysql
            dockerfile: Dockerfile
        ports:
            - '${FORWARD_DB_PORT:-3310}:3306'
        environment:
            MYSQL_ROOT_PASSWORD: '12345678'
            MYSQL_ROOT_HOST: '%'
            MYSQL_DATABASE: 'robert'
            MYSQL_USER: 'robert'
            MYSQL_PASSWORD: '12345678'
            MYSQL_ALLOW_EMPTY_PASSWORD: 1
        networks:
            - ticket-network
        volumes:
            - order-mysql-volume:/var/lib/mysql
    payment-mysql:
        build:
            context: ./payment/docker/8.1/mysql
            dockerfile: Dockerfile
        ports:
            - '${FORWARD_DB_PORT:-3311}:3306'
        environment:
            MYSQL_ROOT_PASSWORD: '12345678'
            MYSQL_ROOT_HOST: '%'
            MYSQL_DATABASE: 'robert'
            MYSQL_USER: 'robert'
            MYSQL_PASSWORD: '12345678'
            MYSQL_ALLOW_EMPTY_PASSWORD: 1
        networks:
            - ticket-network
        volumes:
            - payment-mysql-volume:/var/lib/mysql
    ticket-mysql:
        build:
            context: ./ticket/docker/8.1/mysql
            dockerfile: Dockerfile
        ports:
            - '${FORWARD_DB_PORT:-3312}:3306'
        environment:
            MYSQL_ROOT_PASSWORD: '12345678'
            MYSQL_ROOT_HOST: '%'
            MYSQL_DATABASE: 'robert'
            MYSQL_USER: 'robert'
            MYSQL_PASSWORD: '12345678'
            MYSQL_ALLOW_EMPTY_PASSWORD: 1
        networks:
            - ticket-network
        volumes:
            - ticket-mysql-volume:/var/lib/mysql
    zookeeper:
        image: confluentinc/cp-zookeeper:latest
        environment:
            ZOOKEEPER_CLIENT_PORT: 2181
            ZOOKEEPER_TICK_TIME: 2000
        ports:
            - 2181:2181
        networks:
            - ticket-network
    kafka:
        image: confluentinc/cp-kafka:latest
        restart: always
        environment:
            KAFKA_BROKER_ID: 1
            KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
            KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
            KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
            KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
            CONFLUENT_METRICS_ENABLE: 'false'
            KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
            KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
        ports:
            - 29092:29092
        depends_on: 
            - zookeeper
        networks:
            - ticket-network
    # kafka-manager:
    #     image: hlebalbau/kafka-manager:latest
    #     platform: linux/amd64
    #     container_name: kafka-manager
    #     depends_on:
    #         - kafka
    #     ports:
    #         - "9000:9000"
    #     environment:
    #         - ZK_HOSTS=zookeeper:2181
    #         - APPLICATION_SECRET=letmein
    #     networks:
    #         - ticket-network
networks:
    ticket-network:
        driver: bridge
volumes:
  ticket-mysql-volume:
  order-mysql-volume:
  payment-mysql-volume:
  expiration-mysql-volume:
  auth-mysql-volume:
